#pragma once
#include "common.cpp"
using namespace dalt;
#include "stirling_number.cpp"
#include "ntt.cpp"
using Mi = ModInt998244353; 
void SolveOne(IStream &in, OStream &out) {
  int N;
  in >> N;
  auto res = math::SecondKindStirlingNumber<poly::NTTConv<Mi>>(N);
  for(auto x : res) {
    out << x << ' ';
  } 
}

void SolveMulti(IStream &in, OStream &out) {
  //std::ifstream input("in");
  int num_of_input = 1;
  for (int i = 0; i < num_of_input; i++) {
    SolveOne(in, out);
  }
}